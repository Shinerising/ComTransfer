name: .NET Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [ Release ]

    runs-on: windows-2019  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: ComTransfer.sln
      Archive_Name: "../ComTransfer-preview.zip"
      Project_Path: ComTransfer.csproj
      Test_Project_Path: UnitTest\UnitTest.csproj
      Test_Target: '../_test/UnitTest.dll'

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Add MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
        
    - name: Restore Packages
      run: nuget restore $env:Solution_Name
        
    - name: Build Test Project
      run: msbuild.exe $env:Solution_Name /target:UnitTest /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /p:DebugSymbols=false /p:DebugType=None /p:OutputPath="../../_test"
    
    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1
      
    - name: Run tests
      run: vstest.console.exe ${{ env.Test_Target }}
              
    - name: Build Solution
      run: msbuild.exe $env:Solution_Name /target:ComTransfer /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /p:DebugSymbols=false /p:DebugType=None /p:OutputPath="../../_build"
        
    # Sign Binaries
    - name: Sign Binaries
      uses: GabrielAcostaEngler/signtool-code-sign@main
      with:
        certificate: '${{ secrets.Base64_Encoded_PFX }}'
        cert-password: '${{ secrets.PFX_KEY }}'
        cert-sha1: '${{ secrets.PFX_SHA1 }}'
        folder: '../_build'
        recursive: false
        timestamp-server: 'http://timestamp.digicert.com'
        
    - name: Archive Release
      uses: thedoctor0/zip-release@main
      with:
        type: "zip"
        path: "../_build/*"
        filename: ${{ env.Archive_Name }}

    - name: Generate Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: ${{ env.Archive_Name }}
